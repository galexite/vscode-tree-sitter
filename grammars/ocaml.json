{
  "simpleTerms": {
    "class_name": "type",
    "module_type_name": "type",
    "constructor_name": "type",

    "label": "variable",
    "field_name": "variable",
    "instance_variable_name": "variable",
    "attribute_id": "variable",
    "type_variable": "variable",
    "conversion_specification": "variable",
    "tag": "variable",

    "method_name": "function",
    "directive": "function",
    "\"open\"": "function",
    "\"include\"": "function",
    "\"inherit\"": "function",

    "\"private\"": "modifier",
    "\"rec\"": "modifier",
    "\"nonrec\"": "modifier",
    "\"mutable\"": "modifier",
    "\"constraint\"": "modifier",
    "\"virtual\"": "modifier",

    "\"if\"": "control",
    "\"then\"": "control",
    "\"else\"": "control",
    "\"while\"": "control",
    "\"do\"": "control",
    "\"done\"": "control",
    "\"for\"": "control",
    "\"to\"": "control",
    "\"downto\"": "control",
    "\"match\"": "control",
    "\"with\"": "control",
    "\"when\"": "control",
    "\"function\"": "control",
    "\"fun\"": "control",
    "\"try\"": "control",
    "\"|\"": "control",
    "\"->\"": "control",
    "\"sig\"": "control",
    "\"struct\"": "control",
    "\"object\"": "control",
    "\"begin\"": "control",
    "\"end\"": "control",
    "match_operator": "control",

    "\"in\"": "operator",
    "\"module\"": "operator",
    "\"functor\"": "operator",
    "\"class\"": "operator",
    "\"let\"": "operator",
    "\"and\"": "operator",
    "\"external\"": "operator",
    "\"method\"": "operator",
    "\"initializer\"": "operator",
    "\"type\"": "operator",
    "\"exception\"": "operator",
    "\"val\"": "operator",

    "prefix_operator": "operator",
    "infix_operator": "operator",
    "indexing_operator": "operator",
    "let_operator": "operator",
    "and_operator": "operator",
    "\"*\"": "operator",
    "\"&\"": "operator",
    "\"#\"": "operator",
    "\"::\"": "operator",
    "\"assert\"": "operator",
    "\"lazy\"": "operator",
    "\"of\"": "operator",
    "\"as\"": "operator",
    "\"<-\"": "operator",
    "\"new\"": "operator",

    "comment": "comment",
    "line_number_directive": "comment",
    "shebang": "comment",
    "number": "number",
    "string": "string",
    "quoted_string": "string",
    "character": "string",
    "escape_sequence": "string",
    "pretty_printing_indication": "string",
    "boolean": "constant",
    "unit": "constant",

    "\"[@\"": "punctuation",
    "\"[@@\"": "punctuation",
    "\"[@@@\"": "punctuation",
    "\"[%\"": "punctuation",
    "\"[%%\"": "punctuation",
    "\"%\"": "punctuation",
    "\";\"": "punctuation",
    "\";;\"": "punctuation",
    "\",\"": "punctuation",
    "\"[\"": "punctuation",
    "\"]\"": "punctuation",
    "\"[|\"": "punctuation",
    "\"|]\"": "punctuation",
    "\"{\"": "punctuation",
    "\"}\"": "punctuation",
    "\"(\"": "punctuation",
    "\")\"": "punctuation",
    "\"=\"": "punctuation",
    "\":\"": "punctuation",
    "\":>\"": "punctuation",
    "\"+=\"": "punctuation",
    "\":=\"": "punctuation"
  },

  "complexTerms": ["value_name", "module_name"],

  "complexScopes": {
    "module_name": "type",
    "value_name": "variable",

    "value_specification > value_name": "function",
    "let_binding > value_name": "function",
    "external > value_name": "function",

    "parameter > value_name": "variable",
    "alias_pattern > value_name": "variable",
    "module_parameter > module_name": "variable",
    "inheritance_definition > value_name": "variable"
  }
}
